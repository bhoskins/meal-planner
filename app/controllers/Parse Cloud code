Parse Cloud code
search for bookmarks with a certain title

how did he get to screen?
search button:
parse/docs/Cloud Code - under REST API on left column

install on command line.
copy curl command. run anywhere becaue globale

on command line:
parse   - to see what parse can do

Setting up Cloud Code
new dire in project
  in git repo
  its a subdir   'backend'
app    .    'backend'   for parse

parse new <directoryNameBackend>

backend
  public - static assets
  config -
  cloud - your parse code here
    main.js

Two kinds of cloud code
2 functions
  parse functions and hooks

define js function,  that will post ??
hook that happens before or afer an event in parse

can run code before a class is saved
  or after create an event, before save event

  use for validation, before saved, look at validation
    if passes save, if not don't

  use atl? in after code??

  @@@@@@@@@@
  comes with Hello World example

cd into backend
  parse deploy

gives a release so you can roll back theoretically

send a post request to the url ..../hello  it happens

Ember.$.ajax("htps://api.parse.com/1/functions/, {type: 'POST' }hello").
then(function(){

}) ?????????

var search = require('./search');
        (start in current directory ./word)

Parse.Cloud.define('search', function(rquest, response) {
  ;

backend/cloud/search.js

modul.export = function(request, response) {
  response.success("search");
}

Ember.$.ajax(ttp......//functons/search"), {
  type: 'post',
  data: JSON, stringify
}

query:
  javascript guide/ queries/


api reference

contains,  containsAll, lots of choices for
  query functions

Look at code example   query in parse somewhere

Using parse in emer
create search route

  serach, path: /search/:term

  route
  model: function(params){
  return params.term;
  console.log(params.term);


  }

  app template
    form navebar

    {{input type='type'
      {{actoin 'search' on='submmit'}}
    }}


    application controller
    actons: {
    sarch: functioin(){
    var term = this.get('serchTe')
    console.log(this.get('searchTerm'));
    this.set('searchTerm', null);
    this.transitionToRoute('search', term)
    }
    }

    search for cool
      console logs cool


      now make the cloud function the model of the search route.

adpater for bookmark;
already had findQuery so putting in route


in search route
model: fucntion(params){
  return ajax("https//api.pars..../function/search", {
  type: 'post,
  data: JSON.stringify(search: params.term)
  }).then()
}

serach hbs
#each

see pincushion




























